import matplotlib.pyplot as plt

ensemble = trajectories.ensemble

adist = 0.1
# |a|
amin, amax = 0., 4.9+adist  # arange drops last number, so pad range by dist
# pdb.set
accel_all_magn = ensemble['acceleration_3Dmagn'].values
a_counts, aabs_bins = np.histogram(accel_all_magn, bins=np.arange(amin, amax, adist))
# turn into prob dist
a_counts[a_counts == 0] += 1
a_counts = a_counts.astype(float)
a_total_counts = a_counts.sum()
a_counts_n = a_counts / a_total_counts

vdist =  0.015
vmin, vmax = 0., 0.605
velo_all_magn = ensemble['velocity_3Dmagn'].values
v_counts, vabs_bins = np.histogram(velo_all_magn, bins=np.arange(vmin, vmax, vdist))
v_counts[v_counts == 0] += 1
v_counts = v_counts.astype(float)
v_total_counts = v_counts.sum()
# turn into prob dist
v_counts_n = v_counts / v_total_counts

a_csv = np.genfromtxt('experimental_data/acceleration_distributions_uw.csv',delimiter=',')
a_csv = a_csv.T
a_observed = a_csv[4][:-1]  # throw out last datum

v_csv = np.genfromtxt('experimental_data/velocity_distributions_uw.csv',delimiter=',')
v_csv = v_csv.T
v_observed = v_csv[4][:-1]  # throw out last datum

plt.ioff()
f, axarr = plt.subplots(2, sharex=False)
axarr[0].plot(aabs_bins[:-1], a_counts_n, label='RoboSkeeter')
axarr[0].plot(aabs_bins[:-1], a_observed, c='r', label='experiment')
axarr[0].set_title('accel distributions')
axarr[0].legend()

axarr[1].plot(vabs_bins[:-1], v_counts_n, label='RoboSkeeter')
axarr[1].plot(vabs_bins[:-1], v_observed, c='r', label='experiment')
axarr[1].set_title('velocity distributions')
axarr[1].legend()
plt.show()