from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import baseline_driving_forces3D
import numpy as np

##############################################################################################
#
##############################################################################################

fig = plt.figure(1)
ax = fig.add_subplot(111, projection='3d')

POINTS = 1000

data = np.zeros((POINTS, 3))
for point in range(POINTS):
    data[point] = baseline_driving_forces3D.gen_symm_vecs(3)

x = data[:,0]
y = data[:,1]
z = data[:,2]

ax.scatter(x, y, z, c='b', marker='.', alpha=0.2)
ax.scatter(0,0,0, c='r', marker='o', s=50)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.title("Visualization of F_random direction selection")
plt.savefig('F_rand_direction_selection.png')
plt.show()

##############################################################################################
# #
# ##############################################################################################
#
# fig = plt.figure(2)
# ax = fig.add_subplot(111, projection='3d')
#
# RF = 4.12405e-6
#
# RF_data = np.zeros((POINTS, 3))
# for point in range(POINTS):
#     RF_data[point] = baseline_driving_forces3D.random_force(RF)
#
# RF_x = RF_data[:,0]
# RF_y = RF_data[:,1]
# RF_z = RF_data[:,2]
#
#
#
# ax.scatter(RF_x, RF_y, RF_z, c='b', marker='.')
#
# ax.set_xlabel('X')
# ax.set_ylabel('Y')
# ax.set_zlabel('Z')
# plt.title("Visualization of F_random")
# plt.savefig('F_rand_cloud.png')
# plt.show()

##############################################################################################
#
##############################################################################################


fig = plt.figure(3)
ax = fig.add_subplot(111, projection='3d')
x = trajectories.ensemble.totalF_x
y = trajectories.ensemble.totalF_y
z = trajectories.ensemble.totalF_z

ax.scatter(x, y, z, c='b', marker='.', alpha=0.2)
ax.scatter(0,0,0, c='r', marker='o', s=50)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.title("Visualization of F_total")
plt.savefig('F_total_cloud.png')
plt.show()

##############################################################################################
#
##############################################################################################


fig = plt.figure(4)
ax = fig.add_subplot(111, projection='3d')
x = trajectories.ensemble.stimF_x
y = trajectories.ensemble.stimF_y
z = trajectories.ensemble.stimF_z

ax.scatter(x, y, z, c='b', marker='.', alpha=0.2)
ax.scatter(0,0,0, c='r', marker='o', s=50)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.title("Visualization of F_stim")
plt.savefig('F_stim_cloud.png')
plt.show()

##############################################################################################
#
##############################################################################################


fig = plt.figure(5)
ax = fig.add_subplot(111, projection='3d')
x = trajectories.ensemble.upwindF_x
y = trajectories.ensemble.upwindF_y
z = trajectories.ensemble.upwindF_z

ax.scatter(x[:20], y[:20], z[:20], c='b', marker='.', alpha=0.2)
ax.scatter(0,0,0, c='r', marker='o', s=50)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.title("Visualization of F_upwind")
plt.savefig('F_upwind_cloud.png')
plt.show()

##############################################################################################
#
##############################################################################################

fig = plt.figure(6)
ax = fig.add_subplot(111, projection='3d')
x = trajectories.ensemble.biasF_x
y = trajectories.ensemble.biasF_y
z = trajectories.ensemble.biasF_z

ax.scatter(x, y, z, c='b', marker='.', alpha=0.2)
ax.scatter(0,0,0, c='r', marker='o', s=50)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.title("Visualization of F_random")
plt.savefig('F_random_cloud.png')
plt.show()


##############################################################################################
#
##############################################################################################

fig = plt.figure(7)
ax = fig.add_subplot(111, projection='3d')
x = trajectories.ensemble.wallRepulsiveF_x
y = trajectories.ensemble.wallRepulsiveF_y
z = trajectories.ensemble.wallRepulsiveF_z

ax.scatter(x, y, z, c='b', marker='.', alpha=0.2)
ax.scatter(0,0,0, c='r', marker='o', s=50)

ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
plt.title("Visualization of F_wall repulsion")
plt.savefig('F_wall repulsion_cloud.png')
plt.show()